{"version":3,"sources":["components/HomeStories.js","components/Home.js","components/StoryViewport.js","components/Stories.js","App.js","reportWebVitals.js","index.js"],"names":["Works","projects","data","works","map","project","className","path","to","src","icon","alt","id","name","React","Component","Home","StoryViewport","props","state","currentPage","showNextPage","bind","setProgressBar","progressBarRef","createRef","pagesRef","TimeAgo","addLocale","en","clearTimeout","this","pageTimeout","isActive","story","length","setState","index","interval","i","bars","current","len","children","pages","pageContent","querySelector","wrapper","bar","classList","add","nodeName","style","animationDuration","addEventListener","P","timeAgo","published","format","Date","page","pagelist","progress","progresslist","ref","cover","Stories","J","storyLen","onNextButtonClick","onPrevButtonClick","findSelectedProjectIndex","window","location","pathname","generateStoryList","onClick","list","li","push","e","App","Child","NoMatch","useParams","console","log","useLocation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a29cf96a.chunk.js","sourcesContent":["import React from 'react'\r\nimport data from './Stories.json';\r\nimport './HomeStories.scoped.css'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Works extends React.Component {\r\n\r\n    render() {\r\n\r\n        /**\r\n         * Thumbnail\r\n         */\r\n        const projects = data.works.projects.map(project =>\r\n            <li className='project' key={project.path}>\r\n                {/* Render only when {project.path} is provided */}\r\n                {project.path &&\r\n                    <Link to={'/stories' + project.path}>\r\n                    {/* <Link to={ project.path}> */}\r\n                        <img src={project.icon} className=\"icon\" key={project.id}  alt={project.id} />\r\n                        <p className=\"project-name\">{project.name}</p>\r\n                    </Link>}\r\n            </li>\r\n        );\r\n\r\n        // console.log(projects)\r\n        return (\r\n            <section className=\"HomeStories\">\r\n                {/* <h4>Works</h4> */}\r\n                <ul className=\"icons-featured\">\r\n                    {projects}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Works","import React from \"react\";\r\nimport Stories from \"./HomeStories\";\r\nimport \"./Home.scoped.css\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className=\"home\">\r\n        {/* <h1>Home</h1> */}\r\n        <Stories />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport './StoryViewport.scoped.css';\r\n\r\n// Time formatter\r\nimport TimeAgo from 'javascript-time-ago'\r\nimport en from 'javascript-time-ago/locale/en'\r\n\r\n\r\nconst CL_DONE = 'done';\r\nconst CL_PRE = 'pre';\r\nconst CL_CURRENT = 'current';\r\n\r\nconst NODE_IMG = \"IMG\";\r\nconst EVENT_ANIMATION_END = 'animationend';\r\n\r\nconst INTERVAL_NEXT_PAGE = 3000;\r\nexport default class StoryViewport extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currentPage: 0 };\r\n\r\n        this.showNextPage = this.showNextPage.bind(this);\r\n        this.setProgressBar = this.setProgressBar.bind(this);\r\n\r\n        this.progressBarRef = React.createRef();\r\n        this.pagesRef = React.createRef();\r\n        // Date formatter\r\n        TimeAgo.addLocale(en);\r\n    }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     const HOLD_STILL = 3000; // 3000ms hold to move onto the next page.\r\n    //     this.pageTimer = setInterval(this.showNextPage, HOLD_STILL)\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.pageTimer)\r\n    // }\r\n\r\n\r\n    /**\r\n     * Show next page. May need to be refactored to gotoPage with parameters.\r\n     * @returns \r\n     */\r\n    showNextPage() {\r\n        clearTimeout(this.pageTimeout)\r\n        // If it's not active (selected, focused) ignore\r\n        if (!this.props.isActive) {\r\n            this.setProgressBar(0);\r\n            return;\r\n        }\r\n\r\n        // If it reaches to the last page, ignore\r\n        if (this.props.project.story.length - 1 <= this.state.currentPage) {\r\n            this.setProgressBar(-1);\r\n            return;\r\n        }\r\n\r\n        // Page Prorgression\r\n        this.setState({ currentPage: this.state.currentPage + 1 });\r\n\r\n        // Start bar animation\r\n        this.setProgressBar(this.state.currentPage, INTERVAL_NEXT_PAGE);\r\n    \r\n    }\r\n\r\n\r\n    setProgressBar(index, interval) {\r\n        // index 0 = empty all\r\n        // index -1 = fill all\r\n\r\n        let i;\r\n\r\n        // collection of bars\r\n        const bars = this.progressBarRef.current;\r\n        // how many bars in this account?\r\n        const len = bars && bars.children ? bars.children.length : 0;\r\n        // console.log(\"setProgressBar \", index, len);\r\n\r\n        // Reference to the contents\r\n        const pages = this.pagesRef.current;\r\n        // current page number\r\n        const currentPage = pages ? pages.children[this.state.currentPage] : null;\r\n        const pageContent = currentPage ? currentPage.querySelector('.content') : null;\r\n\r\n        // console.log(pageContent, pageContent.nodeName)\r\n\r\n\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            const wrapper = bars.children[i];\r\n            const bar = wrapper ? wrapper.querySelector('div') : null;\r\n            // console.log(bar.style.width = '100%');\r\n\r\n            if (bar) {\r\n                bar.classList = [];\r\n            }\r\n\r\n            if (i < this.state.currentPage)\r\n                bar.classList.add(CL_DONE)\r\n            else if (i > this.state.currentPage)\r\n                bar.classList.add(CL_PRE)\r\n            else {\r\n                if (pageContent.nodeName === NODE_IMG) {\r\n                    bar.classList.add(CL_CURRENT)\r\n                    bar.style.animationDuration = `${interval}ms`;\r\n                    bar.addEventListener(EVENT_ANIMATION_END, this.showNextPage)\r\n                }\r\n            }\r\n            // node.children[i].querySelector('div').style.width = 100;\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // console.log(this.props.project)\r\n        const FORMAT_IMAGE = 'image';\r\n        const P = this.props.project;\r\n        const S = P.story;\r\n        const KEY_CURRENT = \"current\";\r\n\r\n\r\n        if (this.props.isActive) {\r\n            // this.showNextPage();\r\n            this.setProgressBar(1, 3500);\r\n        } else if (this.state.currentPage !== 0) {\r\n            this.setState({ currentPage: 0 })\r\n        }\r\n\r\n        // console.log(`rendering ${P.name} `)\r\n\r\n        // TimeAgo formatter \r\n        const timeAgo = new TimeAgo('en-US');\r\n        // Published date in timeago format\r\n        const published = P.published ? timeAgo.format(new Date(P.published), 'mini') : \"\";\r\n\r\n        // page contents\r\n        const pages = this.props.project.story.map((page, i) =>\r\n            <li className={\"page\" + (i === this.state.currentPage ? \" \" + KEY_CURRENT : '')} key={i}>\r\n\r\n                {/* Static Image */}\r\n                {page.format === FORMAT_IMAGE &&\r\n                    <img src={page.src} alt={page.src} format={page.format} className=\"scale-to-fit content\" />}\r\n            </li>);\r\n\r\n        this.pagelist = pages;\r\n\r\n        // Page progress bars\r\n        const progress = this.props.project.story.map((page, i) =>\r\n            <li key={i} className={\"progress \"} ><div></div></li>\r\n        );\r\n\r\n        this.progresslist = progress;\r\n\r\n\r\n\r\n        return (\r\n            <div className=\"StoryViewport\">\r\n                <ul className=\"page-progress\" ref={this.progressBarRef}>{progress}</ul>\r\n                <img src={P.cover || \"\"} alt={P.name} className=\"story-bg\" />\r\n                <img src={P.icon || \"\"} alt={this.props.project.name} className=\"icon\" />\r\n                <div className=\"project-header\">\r\n                    <span className=\"project-name\">{P.name}</span>\r\n                    <span className=\"project-age\">{published}</span>\r\n                </div>\r\n                <ul className=\"pages\" ref={this.pagesRef}>\r\n                    {pages}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","/**\r\n * Stories.js \r\n * Renders list of stories.\r\n * First, it checks props.path for the matching path of the story.\r\n * Then it looks up Stories.json for the matching story object.\r\n * The matched story is tagged as current, and assign next 3 stories as r1, r2, r3, and previous 3 stories as l1,l2,l3.\r\n * \r\n */\r\n\r\nimport React from 'react'\r\nimport data from './Stories.json';\r\n\r\nimport './Stories.scoped.css'\r\nimport StoryViewport from './StoryViewport';\r\nimport { Link, history } from 'react-router-dom'\r\n\r\nexport default class Stories extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // The Project data\r\n            J: null,\r\n\r\n            // Current story index\r\n            current: -1,\r\n\r\n            storyLen: data.works.projects.length,\r\n        }\r\n\r\n        this.onNextButtonClick = this.onNextButtonClick.bind(this);\r\n        this.onPrevButtonClick = this.onPrevButtonClick.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.path = this.props.path;\r\n        this.findSelectedProjectIndex();\r\n    }\r\n\r\n\r\n    /**\r\n     * Looking up project index from path. Save the index into state.\r\n     * @todo Do we really need this?\r\n     */\r\n    findSelectedProjectIndex() {\r\n        if (data.works.projects) {\r\n            for (let i = data.works.projects.length - 1; i >= 0; i -= 1) {\r\n                // console.log(`Current ID: /${this.path} / ${data.works.projects[i].path}`)\r\n                if (data.works.projects[i].path === '/' + this.path) {\r\n                    // console.log(`Project Matched: ${this.path} at index: ${i}`)\r\n                    this.setState({ current: i })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Close Stories page. \r\n     * \r\n     * !! For now, it just go back to the home page\r\n     */\r\n    closeStories() {\r\n        // console.log('close!')\r\n        window.location.pathname = '/'\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        // const { loading, data } = this.state;\r\n        // if (this.state.J === null) {\r\n        //     return (<div>Still Loading</div>)\r\n        // }\r\n        // else if (this.state.J.title) {\r\n        return (\r\n            <section className=\"Stories desktop\">\r\n                <div className=\"backdrop\"></div>\r\n                <Link to='/' className=\"close-stories\"><span className=\"material-icons\">close</span></Link>\r\n                <ul className=\"story-viewports\">\r\n                    {/* {this.generateTempStoryList()} */}\r\n                    {this.generateStoryList()}\r\n                </ul>\r\n                <button className=\"btn-prev\"\r\n                    onClick={this.onPrevButtonClick} >\r\n                    <span className=\"material-icons\">\r\n                        navigate_before\r\n                    </span>\r\n                </button>\r\n                <button className=\"btn-next\"\r\n                    onClick={this.onNextButtonClick} >\r\n                    <span className=\"material-icons\">\r\n                        navigate_next\r\n                    </span>\r\n                </button>\r\n                {/* <h1>Story: {this.state.J.title}</h1> */}\r\n                <p>Path: {this.path}</p>\r\n            </section>\r\n        )\r\n        // } \r\n\r\n        // else {\r\n        //     return (\r\n        //         <section>Project Not Found</section>\r\n        //     )\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     Make multiple story list for testing\r\n     */\r\n    // generateTempStoryList() {\r\n    //     let list = [];\r\n    //     for (let i = this.state.storyLen - 1; i >= 0; i -= 1) {\r\n    //         const index = i;\r\n    //         // const template_index = i % data.works.projects.length;\r\n    //         const li = <li className={\r\n    //             \"story-wrapper \"\r\n    //             + (this.state.current === index ? \"current \" : \"\")\r\n    //             + (this.state.current - 1 === index ? \"l1 \" : \"\")\r\n    //             + (this.state.current - 2 === index ? \"l2 \" : \"\")\r\n    //             + (this.state.current - 3 === index ? \"l3 \" : \"\")\r\n    //             + (this.state.current + 1 === index ? \"r1 \" : \"\")\r\n    //             + (this.state.current + 2 === index ? \"r2 \" : \"\")\r\n    //             + (this.state.current + 3 === index ? \"r3 \" : \"\")\r\n    //         } index={index}>\r\n    //             <StoryViewport\r\n    //                 project={data.works.projects[i]}\r\n    //                 isActive={this.state.current === index} />\r\n    //         </li>;\r\n    //         // li.index = index;\r\n    //         list.push(li);\r\n    //         // console.log(li)\r\n    //     }\r\n\r\n    //     // console.log(`this.state.current: ${this.state.current}`)\r\n\r\n    //     return list;\r\n    // }\r\n\r\n\r\n    generateStoryList() {\r\n        const len = this.state.storyLen;\r\n        let list = [];\r\n        for (let i = len - 1; i >= 0; i -= 1) {\r\n            const index = i;\r\n            // console.log(this.state.current === index ? `${index} is current`:`${index} is not`)\r\n            const li = <li className={\r\n                \"story-wrapper \"\r\n                + (this.state.current === index ? \"current \" : \"\")\r\n                + (this.state.current - 1 === index ? \"l1 \" : \"\")\r\n                + (this.state.current - 2 === index ? \"l2 \" : \"\")\r\n                + (this.state.current - 3 === index ? \"l3 \" : \"\")\r\n                + (this.state.current + 1 === index ? \"r1 \" : \"\")\r\n                + (this.state.current + 2 === index ? \"r2 \" : \"\")\r\n                + (this.state.current + 3 === index ? \"r3 \" : \"\")\r\n            } index={index} key={index}>\r\n                <StoryViewport\r\n                    project={data.works.projects[i]}\r\n                    isActive={this.state.current === index} />\r\n            </li>;\r\n            // li.index = index;\r\n            list.push(li);\r\n            // console.log(li)\r\n        }\r\n\r\n        // console.log(`this.state.current: ${this.state.current}`)\r\n\r\n        return list;\r\n    }\r\n\r\n    onNextButtonClick(e) {\r\n        // console.log(this)\r\n        if (this.state.current >= this.state.storyLen - 1)\r\n            return;\r\n        // console.log(`this.state.current: ${this.state.current}`)\r\n        this.setState({ current: this.state.current + 1 })\r\n\r\n        // console.log(data.works.projects[this.state.current].path)\r\n        // const location = {\r\n        //     pathname: '/story' + data.works.projects[this.state.current].path\r\n        // }\r\n        // let history = history(); \r\n        // history.push( '/story' + data.works.projects[this.state.current].path)\r\n    }\r\n    onPrevButtonClick(e) {\r\n        if (this.state.current <= 0)\r\n            return;\r\n        // console.log(this)\r\n        this.setState({ current: this.state.current - 1 })\r\n    }\r\n}","\nimport './App.css';\n// import Header from './components/Header'\nimport Home from './components/Home'\nimport Stories from './components/Stories'\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useLocation\n} from \"react-router-dom\";\n\n\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\" className=\"home\">\n                <span className=\"material-icons\">home</span></Link>\n            </li>\n            <li>\n              <Link to=\"/\" className=\"contact\">\n                <span className=\"material-icons\">chat</span></Link>\n            </li>\n            <li>\n              <Link to=\"/\" className=\"me\">\n                <span className=\"material-icons\">face</span></Link>\n            </li>\n            \n          </ul>\n        </nav>\n\n        {/* Page switches */}\n\n        <Home />\n        <Switch>\n          <Route path=\"/stories/:id\" children={<Child />} />\n          <Route path=\"/\" />\n          <Route path=\"*\">\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\n\n\n/**\n * Everything other than Home\n * @returns \n */\nfunction Child() {\n  let { id } = useParams();\n  console.log(id)\n  return (\n    <div>\n      <Stories path={id}  />\n    </div>\n  )\n}\n\n\n/**\n * 404\n * @returns \n */\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}